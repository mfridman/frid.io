<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>frid.io</title>
    <link>https://mfridman.github.com/frid.io/</link>
    <description>Recent content on frid.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Feb 2018 17:36:50 -0500</lastBuildDate>
    
	<atom:link href="https://mfridman.github.com/frid.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A mongoDB Go Driver - by the mongoDB folks</title>
      <link>https://mfridman.github.com/frid.io/golang/a-new-mongodb-go-driver/</link>
      <pubDate>Thu, 22 Feb 2018 17:36:50 -0500</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/golang/a-new-mongodb-go-driver/</guid>
      <description>So this is exciting, the mongoDB team is working on an official mongoDB Go driver. The official announcement can be found at MongoDB Go Driver Alpha 1 released
For those interested why mongoDB chose to write a driver from the ground-up as apposed to forking mgo read their engineering blog
The repo can be found on github mongo-go-drive and bug reports should be filed over on jira.mongodb.org
I&amp;rsquo;ve been wanting to give mongoDB a fair shot, and now seems to be the right time.</description>
    </item>
    
    <item>
      <title>Shine on You Crazy Interface - #golang part1</title>
      <link>https://mfridman.github.com/frid.io/golang/shine-on-you-crazy-interface/</link>
      <pubDate>Mon, 05 Feb 2018 20:07:41 -0500</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/golang/shine-on-you-crazy-interface/</guid>
      <description>Go&amp;rsquo;s interfaces are brilliant. It&amp;rsquo;s not immediately apparent and at first can be confusing, but after a while its brilliance shines through.
Simply understand that if a concrete type posses all necessary methods it, the concrete type, can implicitly satisfy an interface.
In Go, interfaces are considered abstract types, meaning we do not know what an interface really is, only what it can do.
The Go standard library makes use of interfaces, let&amp;rsquo;s take a look at an example.</description>
    </item>
    
    <item>
      <title>Shine on You Crazy Interface - #golang part2</title>
      <link>https://mfridman.github.com/frid.io/golang/shine-on-you-crazy-interface2/</link>
      <pubDate>Mon, 05 Feb 2018 20:07:41 -0500</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/golang/shine-on-you-crazy-interface2/</guid>
      <description>No interface discussion is complete without talking about the fmt.Stringer interface. This is a classic when introducing the topic of interfaces.
Notice in part1 we actually made use of this interface to format the songs type.
func (s songs) String() string { var ss []string for i := range s { ss = append(ss, s[i].name+&#34; &#34;+fmt.Sprint(s[i].release.Year())) } return strings.Join(ss, &#34;, &#34;) }  When we called a print function the output was nicely formatted:</description>
    </item>
    
    <item>
      <title>Year End 2017</title>
      <link>https://mfridman.github.com/frid.io/blog/year-end-2017/</link>
      <pubDate>Sun, 24 Dec 2017 21:04:50 -0500</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/blog/year-end-2017/</guid>
      <description>I don&amp;rsquo;t care much for &amp;ldquo;annual&amp;rdquo; events, i.e., taking action x because y rotations around the sun. But, I do believe in allocating time aside for reflecting and setting future goals. It just so happens that time is now, and now is end-of-year.
The meetup game in Toronto continues to be strong. Lots of interesting folks. Meetups I try regularly attend: DC416, Docker-Toronto, Go-Toronto.
A few members of DC416 and I started playing as a Team capturing digital flags.</description>
    </item>
    
    <item>
      <title>From Jekyll to Hugo</title>
      <link>https://mfridman.github.com/frid.io/blog/from-jekyll-to-hugo/</link>
      <pubDate>Sun, 17 Dec 2017 00:52:08 -0500</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/blog/from-jekyll-to-hugo/</guid>
      <description>Done and Launched.
Still work in progress (WIP), but here we are.
To start local server, bound to link:
hugo server -D --disableFastRender</description>
    </item>
    
    <item>
      <title>Validating host keys in Go&#39;s ssh package</title>
      <link>https://mfridman.github.com/frid.io/golang/go-ssh-hostkey/</link>
      <pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/golang/go-ssh-hostkey/</guid>
      <description>So you upgraded the package: go get -u -v golang.org/x/crypto/...
and got an error: ssh: must specify HostKeyCallback
A quick google search returns this great post Golang SSH Security, as well as issue#19767 and e4e2799.
Briefly, prior to the patch users could omit ssh.HostKeyCallback from ssh.ClientConfig, allowing SSH connections to bypass host key checking and &amp;ldquo;just work&amp;rdquo;.
Given the onus is on the client to verify the identity of the host, this was a step in the right direction in terms of security.</description>
    </item>
    
    <item>
      <title>mindreader</title>
      <link>https://mfridman.github.com/frid.io/ctf/google-2017/mindreader/</link>
      <pubDate>Fri, 23 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/ctf/google-2017/mindreader/</guid>
      <description>2017 was a tough one. Nonetheless, big thanks to  for hosting an event.
Challenge: Can you read my mind? No hints.
All you get is an input box:
Checking the page source doesn&amp;rsquo;t reveal anything fruitful. In hindsight the name=&amp;quot;f&amp;quot; may have been a clue, but it&amp;rsquo;s subtle. (spoiler: f for file)
1234567891011 &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt;Hello, what do you want to read?&amp;lt;/p&amp;gt; &amp;lt;form method=&amp;#34;GET&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;txt&amp;#34; name=&amp;#34;f&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Read&amp;#34;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;</description>
    </item>
    
    <item>
      <title>Generate GPG key, add to GitHub and verify identity</title>
      <link>https://mfridman.github.com/frid.io/blog/gpg-and-all-that/</link>
      <pubDate>Sat, 17 Jun 2017 00:11:24 -0500</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/blog/gpg-and-all-that/</guid>
      <description>But why? GPG signature verification
A few gotchas.
 Make sure to verify the email addresses associated with your GPG key.
 Don&amp;rsquo;t forget to add said email(s) to your .gitconfig file.
e.g., git config --global user.email &amp;quot;email@example.com&amp;quot; (global setting)
 Download GPG suite, which will enable adding key(s) to the macOS keychain.
  Before proceeding, please check for existing keys and make backups!!!
To list keys in secret keyring run: gpg --list-secret-keys.</description>
    </item>
    
    <item>
      <title>Echo</title>
      <link>https://mfridman.github.com/frid.io/ctf/plaid-2017/echo/</link>
      <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/ctf/plaid-2017/echo/</guid>
      <description>Challenge: If you hear enough, you may hear the whispers of a key&amp;hellip;
If you see app.py well enough, you will notice the UI sucks&amp;hellip;
No hints.
PPP (plaid parliament of pwning) puts on one of the best online Jeopardy CTFs. I wish I had more time that weekend (runs for 48hrs only) and a full team, either way I decided to give it a go.
Disclaimer, was not solved within the allotted time.</description>
    </item>
    
    <item>
      <title>Little School Bus</title>
      <link>https://mfridman.github.com/frid.io/ctf/pico-2017/little-schoolbus/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/ctf/pico-2017/little-schoolbus/</guid>
      <description>Had a blast participating with a few local DC416 folks in the 2017 picoCTF!
Challenge: Can you help me find the data in this littleschoolbus.bmp?
Hint: Look at least significant bit (LSB) encoding!!
In retrospect the solution was fairly straightforward, but, tunnel vision got the best of me. Thankfully in the end I ended up learning quite a bit about steganography and LSB. (disclaimer, it was actually solved by a teammate)</description>
    </item>
    
    <item>
      <title>No Eyes</title>
      <link>https://mfridman.github.com/frid.io/ctf/pico-2017/no-eyes/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/ctf/pico-2017/no-eyes/</guid>
      <description>Challenge: The website isn&amp;rsquo;t really me much, but you can still get the admin password, right?
Hint: Sometimes an error message can be just as useful
This one was really rewarding.
So, the landing page looked like this:
Based on the description we assume the username is admin so let&amp;rsquo;s focus on the password field.
Entering a single quote results in an error, great, there is a problem with the query, we know the syntax and it appears to be injectable.</description>
    </item>
    
    <item>
      <title>coffee</title>
      <link>https://mfridman.github.com/frid.io/ctf/pico-2017/coffee/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/ctf/pico-2017/coffee/</guid>
      <description>Challenge: You found a suspicious USB drive in a jar of pickles. It contains this file
$ file freeThePickles.class freeThePickles.class: compiled Java class data, version 52.0 (Java 1.8) Hint: Is there a way to get the source of the program?
Although this challenge didn&amp;rsquo;t call for it, if you want to disassemble a class file use javap like so&amp;hellip;
javap -verbose freeThePickles.class &amp;gt; freeThePickles
Anyways, back to the challenge. I used a &amp;ldquo;cloud-based&amp;rdquo; decompiler, javadecompilers.</description>
    </item>
    
    <item>
      <title>Toolkit (WIP)</title>
      <link>https://mfridman.github.com/frid.io/golang/toolkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/golang/toolkit/</guid>
      <description>Slowly migrating commonly used things here&amp;hellip;
Upgrade Go version (Mac) Always be wary of things you find on the internet that use a combination of wget, tar and sudo.
Go downloads
# remove old version sudo rm -rf /usr/local/go # download a Go version, redirect output to stdout (quietly), pipe into tar and print version wget -qO- https://dl.google.com/go/go1.5.2.darwin-amd64.tar.gz | sudo tar -C /usr/local -xz &amp;&amp; go version # go version go1.</description>
    </item>
    
  </channel>
</rss>