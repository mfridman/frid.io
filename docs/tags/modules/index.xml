<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Modules on frid.io</title>
    <link>https://frid.io/tags/modules/</link>
    <description>Recent content in Modules on frid.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://frid.io/tags/modules/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integrating Go modules with Drone CI</title>
      <link>https://frid.io/golang/go-modules-part3/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://frid.io/golang/go-modules-part3/</guid>
      <description>Go modules: part 1, part 2, part 3  This will be coming soon&amp;hellip;
 Vendor is tailored for the dependencies of a specific module, not warming a cache.
 ðŸ¤” from issue#26610
For CI/CD this may be useful, cl#126656)
and maybe this.. issue#24250</description>
    </item>
    
    <item>
      <title>Welcome, Go modules - part2</title>
      <link>https://frid.io/golang/go-modules-part2/</link>
      <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://frid.io/golang/go-modules-part2/</guid>
      <description>Go modules: part 1, part 2, part 3  The module commands relating to go mod may change: cl#126655, I&amp;rsquo;ll do my best to edit this post to reflect reality.
Go module From the docs: A collection of related Go packages. A single unit that defines the minimum requirements that must be satisfied by their dependencies.
 a go.mod file is located in the root of your package. This location marks the module root, containing all packages in the root and subdirectories</description>
    </item>
    
    <item>
      <title>Welcome, Go modules - part1</title>
      <link>https://frid.io/golang/go-modules-part1/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://frid.io/golang/go-modules-part1/</guid>
      <description>Go modules: part 1, part 2, part 3  For those strictly interested in what is it and how do I use it? head over to part2.
I&amp;rsquo;ll skip majority of the historic bits and add a timeline for context. The path towards Go modules&amp;hellip;
  Makefiles pre-1.0  In the beginning, there were Makefiles such as these, scripts, maybe a ðŸ§™ and lots of 
          GOPATH 1.</description>
    </item>
    
  </channel>
</rss>