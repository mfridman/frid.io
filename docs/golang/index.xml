<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>frid.io</title>
    <link>https://mfridman.github.com/frid.io/golang/</link>
    <description>Recent content on frid.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mfridman.github.com/frid.io/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Validating host keys in Go&#39;s ssh package</title>
      <link>https://mfridman.github.com/frid.io/golang/go-ssh-hostkey/</link>
      <pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/golang/go-ssh-hostkey/</guid>
      <description>So you upgraded the package: go get -u -v golang.org/x/crypto/...
and got an error: ssh: must specify HostKeyCallback
A quick google search returns this great post Golang SSH Security, as well as issue#19767 and e4e2799.
Briefly, prior to the patch users could omit ssh.HostKeyCallback from ssh.ClientConfig, allowing SSH connections to bypass host key checking and &amp;ldquo;just work&amp;rdquo;.
Given the onus is on the client to verify the identity of the host, this was a step in the right direction in terms of security.</description>
    </item>
    
    <item>
      <title>Toolkit</title>
      <link>https://mfridman.github.com/frid.io/golang/toolkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mfridman.github.com/frid.io/golang/toolkit/</guid>
      <description> Upgrade Go version (Mac) Always be wary of things you find on the internet that use a combination of wget, tar and sudo.
Go downloads
# remove old version sudo rm -rf /usr/local/go # download a Go version, redirect output to stdout (quietly), pipe into tar and print version wget -qO- https://dl.google.com/go/go1.5.2.darwin-amd64.tar.gz | sudo tar -C /usr/local -xz &amp;&amp; go version # go version go1.5.2 darwin/amd64  </description>
    </item>
    
  </channel>
</rss>